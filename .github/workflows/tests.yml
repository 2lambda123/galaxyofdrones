name: tests

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: galaxyofdrones_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: imagick
          tools: composer:v2, php-cs-fixer

      - uses: actions/checkout@v2

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.testing.example', '.env');"

      - name: Get node.js cache directory
        id: node-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir))"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.node-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install Node Dependencies
        run: yarn install

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Generate key
        run: php artisan key:generate

      - name: Generate passport keys
        run: php artisan passport:keys

      - name: Migrate and seed database
        run: php artisan migrate --seed --no-interaction

      - name: Generate starmap
        run: php artisan starmap:generate --no-render

      - uses: actions/cache@v2
        with:
          path: ~/.php_cs.cache
          key: ${{ runner.os }}-php-cs-${{ hashFiles('**/.php_cs.cache') }}
          restore-keys: ${{ runner.os }}-php-cs-

      - name: Lint via PHP CS Fixer
        run: php-cs-fixer fix --dry-run

      - name: Start Websockets
        run: php artisan websockets:serve &

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: php artisan test

      - name: Upgrade Chrome Driver
        run: php artisan dusk:chrome-driver `/opt/google/chrome/chrome --version | cut -d " " -f3 | cut -d "." -f1`

      - name: Start Chrome Driver
        run: ./vendor/laravel/dusk/bin/chromedriver-linux &

      - name: Run Laravel Server
        run: php artisan serve &

      - name: Run Dusk Tests
        run: php artisan dusk

      - name: Upload Screenshots
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: screenshots
          path: tests/Browser/screenshots

      - name: Upload Console Logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: console
          path: tests/Browser/console
